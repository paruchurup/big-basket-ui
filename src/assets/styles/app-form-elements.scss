/*
Title: Form Elements
Description: These are reusable components that can be used anywhere on the site

*/

.hj-vertical-form {
  text-align: left;
  .col-form-label {
    text-align: right;
  }
}
label {
  color: $color_Primary_Text;
}

input[type='range'] {
  appearance: none;
  margin: 0;
  width: 150px;
  padding: 0;
  position: relative;
  background:transparent;
  ///z-index: 9999;
}

input[type='range']:focus {
  outline: none;
}

input[type='range']::-webkit-slider-runnable-track {
  width: 100%;
  height: 3px;
  cursor: pointer;
  border-radius: 25px;
  border: 1px solid $color_Grey_Emperor;
  background-color: #333;

}

input[type='range']::-webkit-slider-thumb {
  width: 12px;
  height: 12px;
  border: 1px solid $color_Grey_Emperor;
  border-radius: 50%;
  background-color: $color_Grey_Alabaster;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -6px;
}

input[type='range']::-moz-range-track {
  width: 100%;
  height: 1px;
  cursor: pointer;
  border-radius: 25px;
  border: 1px solid $color_Grey_Emperor;
  background-color: #333;

}

input[type='range']::-moz-range-thumb {
  width: 12px;
  height: 12px;
  border: 1px solid $color_Grey_Emperor;
  border-radius: 50%;
  background-color: $color_Grey_Alabaster;
  cursor: pointer;
  -moz-appearance: none;
}

input[type='range']::-ms-track {
  width: 150px;
  height: 1px;
  cursor: pointer;
  border-color: transparent;
  border-width: 10px 0;
  color: transparent;
  margin: 0;
  padding: 0;
  background-color: #333;

}

input[type='range']::-ms-fill-lower {
  background: transparent;
  border: 1px solid $color_Grey_Emperor;
  border-radius: 50px;
  box-shadow: 0 0 0 black, 0 0 0 $color_Grey_MineShaft;
  margin: 0;
  padding: 0;
  height: 1px;
}

input[type='range']::-ms-fill-upper {
  background: transparent;
  border: 1px solid $color_Grey_MineShaft;
  border-radius: 50px;
  box-shadow: 0 0 0 black, 0 0 0 $color_Grey_MineShaft;
  margin: 0;
  padding: 0;
  height: 1px;
}

input[type='range']::-ms-thumb {
  border: 1px solid $color_Grey_Emperor;
  height: 8px;
  width: 8px;
  border-radius: 50%;
  background: $color_Grey_Alabaster;
  cursor: pointer;
  @extend .appearance-none;
}

input[type='range']:focus::-ms-fill-lower,
input[type='range']:focus::-ms-fill-upper {
  background: transparent;
}

/* The slider */
.slider {
  vertical-align: middle;
  width: 100%;
  opacity: 0.7;
  transition: opacity .2s;
}

/* Mouse-over effects */
.slider:hover {
  opacity: 1;
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  background: #e4e4e4;
  cursor: pointer;
}

.slider::-moz-range-thumb {
  background: #e4e4e4;
  cursor: pointer;
}

//End Custom Slider

.form-control.input-style:hover,
.form-control.input-style:active,
.form-control.input-style:focus {
  padding: 5px 6px;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  opacity: 1;
}

//// --------------------------------Special Green Checkbox
//<div class="hj-checkbox">
//<input type="checkbox" value="1" id="CheckboxTest" name="" />
//<label for="CheckboxTest"><span></span> This is the label </label>
//</div>

.hj-checkbox {
  @extend .hj-checkbox-radio-common;

  span:not(.demurrer) {
    border-radius: 2px;
    position: relative;
  }

  input:checked + label span:not(.demurrer),
  input:checked + span:not(.demurrer) {
    background-color: $color_HJ_Green;

    &:after {
      content: '';
      width: 0.7em;
      height: 0.4em;
      position: absolute;
      top: 0.15em;
      left: 0.05em;
      border: 3px solid $color_Neutral_Alabaster;
      border-top: none;
      border-right: none;
      background: transparent;
      opacity: 1;
      transform: rotate(-45deg);
    }
  }

  //creates space for the checkbox to prevent scrolling issue
  input + label span:not(.demurrer),
  input + span:not(.demurrer) {
    &:after {
      content: '';
      width: 9px;
      height: 5px;
      position: absolute;
      top: 2px;
      left: 1px;
      border: 3px solid transparent;
      border-top: none;
      border-right: none;
    }
  }

  input:checked + label span.partial-selection-state,
  input:checked + span.partial-selection-state {
    background-color: $color_Grey_Silver !important;
  }
}

.hj-checkbox-list-sort {
  label {
    width: 100%;
  }
}

//// ---------------------------- Special Green Radio
//<div class="hj-radio"
//<label class="checkbox-inline">
//<input type="radio" name="include" value="yes" ><span></span>
//                                                        Yes
//</label>
//</div>
.hj-radio {
  @extend .hj-checkbox-radio-common;
  span:not(.demurrer) {
    border-radius: 6px;
  }

  input:checked + label span:not(.demurrer),
  input:checked + span:not(.demurrer) {
    background-color: $color_HJ_Green;

    //&:after{
    //  content: '';
    //  width: 3px;
    //  height: 3px;
    //  position: absolute;
    //  top: 3px;
    //  left: 3px;
    //  border: 2px solid $color_Neutral_Alabaster;
    //  border-radius: 4px;
    //  background: transparent;
    //  opacity: 1;
    //  box-shadow: 0 2px 2px 2px rgba(0,0,0,.25);
    //}
  }
}
//common css used for both radios and checkboxes
.hj-checkbox-radio-common {
  padding: 0;
  margin: 0;
  font-weight: 500;
  label {
    font-weight: 500; //perhaps make this all global
    max-width: 100%;
  }
  &.label-no-wrap label,
  label.label-no-wrap {
    @include display-ellipsis;
  }
  .disabled {
    color: $text-muted;
    cursor: not-allowed;
    span:not(.demurrer) {
      border: 1px solid $color_Neutral_Soapstone;
      filter: grayscale(75%);
    }
  }
  span:not(.demurrer) {
    width: 0.9em;
    height: 0.9em;
    margin: 0 0.3em 0 0;
    border: 1px solid $color_Grey_Night_Rider;
    background-color: lighten($color_Neutral_Soapstone, 3);
    display: inline-block;
    position: relative;
  }
  span.right {
    float: right;
    margin: 2px 0 0 8px;
  }
  input[type='checkbox'],
  input[type='radio'] {
    opacity: 0;
    position: absolute;
  }

  input[type='checkbox']:focus + span:not(.demurrer),
  input[type='radio']:focus + span:not(.demurrer),
  input[type='checkbox']:focus + label span:not(.demurrer),
  input[type='radio']:focus + label span:not(.demurrer) {
    $color-rgba: rgba(
        red($input-border-focus),
        green($input-border-focus),
        blue($input-border-focus),
        0.6
    );
    border-color: $input-border-focus;
    outline: 0;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px $color-rgba;
  }
  li {
    list-style: none;
  }
}

.hj-checkbox-list {
  ul {
    margin: 0;
    padding: 0;
  }

  li {
    padding: 4px 15px;
    position: relative; //for positioning side icon
  }

  label {
    margin: 0;
    width: 100%;
  }

  li:hover {
    //background: linear-gradient(0deg, $color_HoverGrad_Dark 0, $color_HoverGrad_Light 100%);
    background-color: $color_Green_Mint;

    label {
      color: $color_Neutral_Alabaster;
    }
    .hj-list-icon {
      display: inline;
      color: $color_Green_LaPalma;
      &:hover {
        color: $color_Neutral_Alabaster;
      }
    }
  }
}

.hj-list-icon {
  //display: none;
  color: transparent;
  padding: 2px;
  float: right;
}
.hj-list-icon-wrapper {
  position: absolute;
  top: 2px;
  right: 2px;
  cursor: pointer;
}
// -------------------Search Inputs with buttons

.hj-input-search {
  .fa-search {
    font-size: 1.5em;
    float: left;
  }
  //.btn:after {
  //  content: 'S';
  //  visibility: hidden;
  //  //this is a hack to take the space for the icon so the icon can be larger but not make the button larger
  //}

  .btn-hj-search-close {
    background: transparent;
    border: none;
    position: absolute;
    color: lightgrey;
    right: 2.6em;
  }

  .fa-close {
    font-size: 1.4em;
    float: left;
  }

  .btn-hj-search-close:hover,
  .btn-hj-search-close:active,
  .btn-hj-search-close:focus {
    color: red;
    outline: none;
  }
}

// -------------------Add Inputs with  Plus button
//  <div class="input-group">
//    <input type="text" class="form-control" id="inputID" placeholder="Search">
//    <span class="input-group-btn">
//      <button class="btn btn-hj-input-add" type="button"><i class="fa-plus-circle fa" ></i> </button>
//    </span>
//  </div>
.btn-hj-input-add {
  background-color: transparent;
  color: $color_HJ_Green;
  top: 1px;
  .fa-plus-circle {
    font-size: 1.8em;
    position: absolute;
    top: 3px;
    left: 4px;
  }
  &:after {
    content: 'S';
    visibility: hidden;
  }
  &:hover,
  &:focus {
    color: $color_Green_Accent;
    box-shadow: none;
  }
  &:active {
    box-shadow: none;
  }
}
// -------------------Inputs That are Editable inline
.btn-hj-input-inside-button {
  background: transparent;
  border: none;
  position: absolute;
  color: lightgrey;
  top: -4px;
  left: -38px;
  font-size: 19px;
  &:focus,
  &:active:focus {
    outline: none;
    box-shadow: none;
  }
}

.hj-input-editable {
  border: none;
  padding: 0;
  background: transparent;
  cursor: text;
}
.hj-input-editable:active {
  outline: none;
}
.hj-input-editable:focus {
  outline: none;
  border-bottom: 1px dashed rgba(0, 0, 0, 0.2);
}

//range inputs
input[type='range'] {
  outline: none;
  box-shadow: none;
}
input[type='range']:focus {
  outline: none;
  box-shadow: none;
}

//
//.hj-checkbox-list{
//    ul{
//        margin: 0;
//        padding: 0;
//    }
//    li{
//        padding:4px 15px;
//        position: relative; //for positioning side icons
//
//
//    }
//    label{
//        margin: 0;
//        width:100%;
//    }
//
//    li:hover{
//        //background: linear-gradient(0deg, $color_HoverGrad_Dark 0, $color_HoverGrad_Light 100%);
//        background-color: $color_Green_Mint;
//
//        label {color: $color_Neutral_Alabaster;}
//        .hj-list-icon{
//            display: inline;
//            color: $color_Green_LaPalma;
//            &:hover{
//                color: $color_Neutral_Alabaster;
//            }
//        }
//    }
//}

//Validation
input[type='checkbox'].ng-touched.ng-invalid + label {
  color: $danger;
}

input.ng-touched.ng-invalid,
select.ng-touched.ng-invalid {
  border: 1px solid $danger;
  background-color: lighten($danger, 40);
}

//input.ng-touched.ng-invalid + .validation-feedback{
//  visibility: visible;
//}

.validation-feedback {
  visibility: visible;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 80%;
  color: $danger;
}
